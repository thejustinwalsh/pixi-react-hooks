{"version":3,"sources":["../src/utils/index.ts","../src/hooks/useAssetState.ts"],"sourcesContent":["import {Assets} from 'pixi.js';\n\nimport type {UnresolvedAsset} from 'pixi.js';\n\nexport const key = (url: string | UnresolvedAsset) =>\n  typeof url === 'string' ? url : (url.alias ?? url.src ?? '')?.toString();\n\nexport const createKey = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  new Set(Array.isArray(urls) ? urls.map(key) : [key(urls)]);\n\nexport const didKeyChange = (\n  urls: string | UnresolvedAsset | string[] | UnresolvedAsset[],\n  keys: Set<string>,\n) => (Array.isArray(urls) ? !urls.every(url => keys.has(key(url))) : !keys.has(key(urls)));\n\nexport const isLoaded = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls) ? urls.every(url => Assets.cache.has(key(url))) : Assets.cache.has(key(urls));\n\nexport const isBundleLoaded = (bundles: string | string[]) =>\n  Array.isArray(bundles)\n    ? bundles.every(bundle => Assets.resolver.hasBundle(bundle))\n    : Assets.resolver.hasBundle(bundles);\n\nexport const load = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Assets.load(urls);\n\nexport const loadBundle = <T = any>(bundles: string | string[]): Promise<T> =>\n  Assets.loadBundle(bundles);\n\nexport const resolve = <T = any>(urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls)\n    ? urls.reduce((acc, url) => {\n        const k = key(url);\n        if (Assets.cache.has(k)) acc[k] = Assets.cache.get(k);\n        return acc;\n      }, {} as Record<string, T>)\n    : Assets.cache.get(key(urls));\n\nexport const resolveBundle = <T = any>(bundles: string | string[]) =>\n  Assets.resolver.resolveBundle(bundles) as T;\n","import React from 'react';\nimport {useEffect, useState} from 'react';\nimport {didKeyChange, createKey} from '../utils';\n\nimport type {\n  AssetState,\n  HookState,\n  PendingAssetState,\n  LoadedAssetState,\n  ErrorAssetState,\n  AssetUrl,\n} from '../types';\n\ntype LoadedAssetStateReturn<T> = readonly [\n  LoadedAssetState<T>,\n  React.Dispatch<React.SetStateAction<AssetState<T>>>,\n  Promise<T> | null,\n];\n\ntype PendingAssetStateReturn<T> = readonly [\n  PendingAssetState,\n  React.Dispatch<React.SetStateAction<AssetState<T>>>,\n  Promise<T>,\n];\n\ntype ErrorAssetStateReturn<T> = readonly [\n  ErrorAssetState,\n  React.Dispatch<React.SetStateAction<AssetState<T>>>,\n  Promise<T>,\n];\n\ntype AssetStateReturn<T> =\n  | LoadedAssetStateReturn<T>\n  | PendingAssetStateReturn<T>\n  | ErrorAssetStateReturn<T>;\n\nconst getCacheForType = <T>(resourceType: () => T) =>\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.A.getCacheForType(\n    resourceType,\n  );\n\nconst createPromiseCache = <T>() => new Map<string, Promise<T>>();\nconst getPromiseCache = <T>() => getCacheForType(createPromiseCache<T>);\n\nfunction loadFromCache<T>(key: Set<string>, load: () => Promise<T>) {\n  const cache = getPromiseCache<T>();\n  const cacheKey = Array.from(key).join('|');\n\n  let promise = cache.get(cacheKey);\n  if (!promise) promise = load();\n\n  cache.set(cacheKey, promise);\n  return promise;\n}\n\nexport function useAssetState<T, P extends AssetUrl>(\n  urls: P,\n  isLoaded: (urls: P) => boolean,\n  load: <T>(urls: P) => Promise<T>,\n  resolve: <T>(urls: P) => T,\n): AssetStateReturn<T> {\n  const [assetState, setAssetState] = useState<AssetState<T>>(() => {\n    const loaded = isLoaded(urls);\n    return loaded\n      ? {\n          status: 'loaded',\n          isLoaded: true,\n          error: null,\n          data: resolve(urls),\n        }\n      : {\n          status: 'pending',\n          isLoaded: false,\n          error: null,\n          data: null,\n        };\n  });\n\n  const [state, setState] = useState<HookState<T>>(() => {\n    const key = createKey(urls);\n    return {\n      thenable: !assetState.isLoaded ? loadFromCache(key, () => load(urls)) : null,\n      key,\n    };\n  });\n\n  useEffect(() => {\n    if (didKeyChange(urls, state.key)) {\n      const assetsLoaded = isLoaded(urls);\n      setState(state => ({\n        thenable: assetsLoaded ? state.thenable : load(urls),\n        key: createKey(urls),\n      }));\n      setAssetState(\n        assetsLoaded\n          ? {status: 'loaded', isLoaded: true, error: null, data: resolve(urls)}\n          : {status: 'pending', isLoaded: false, error: null, data: null},\n      );\n    }\n  }, [urls, state.key, isLoaded, resolve, load]);\n\n  if (assetState.status === 'error') {\n    return [assetState, setAssetState, state.thenable!] as const;\n  }\n\n  if (assetState.status === 'pending') {\n    return [assetState, setAssetState, state.thenable!] as const;\n  }\n\n  return [assetState, setAssetState, state.thenable] as const;\n}\n"],"mappings":"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","names":["key","load","isLoaded","resolve","state"]}