{"version":3,"sources":["/Users/tjw/Developer/pixi-react-hooks/dist/suspense/index.cjs","../../src/suspense/useAssets.ts","../../src/suspense/useAssetBundle.ts","../../src/suspense/useAssetManifest.ts"],"names":["use"],"mappings":"AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,yDAA8B;AAC9B;AACA;ACXA,8BAAkB;AAUX,SAAS,SAAA,CAAa,IAAA,EAAgB;AAC3C,EAAA,MAAM,MAAA,EAAQ,6CAAA,EAA4B,IAAA,EAAM,oCAAA,EAAU,4BAAA,EAAM,mCAAO,CAAC,CAAA;AACxE,EAAA,OAAO,wBAAA,KAAI,CAAM,OAAO,CAAA;AAC1B;ADIA;AACA;AElBA;AAMO,SAAS,cAAA,CACd,OAAA,EACe;AACf,EAAA,MAAM,MAAA,EAAQ,6CAAA;AAAgD,IAC5D,IAAA,EAAM,OAAA;AAAA,IACN,QAAA,EAAU,gCAAA;AAAA,IACV,IAAA,EAAM,4BAAA;AAAA,IACN,OAAA,EAAS;AAAA,EACX,CAAC,CAAA;AACD,EAAA,OAAOA,wBAAAA,KAAI,CAAM,OAAO,CAAA;AAC1B;AFaA;AACA;AG9BA;AACA,iCAAqB;AAKd,SAAS,gBAAA,CACd,QAAA,EACA,QAAA,EAAoB,CAAC,CAAA,EACrB,QAAA,EAA+D,CAAC,CAAA,EAChE;AACA,EAAA,gDAAA,gBAAiC,CAAA;AACjC,EAAA,MAAM,CAAC,QAAQ,EAAA,EAAI,6BAAA;AAAA,IAAwB,CAAA,EAAA,GACzC,cAAA,CAAO,IAAA,CAAK,EAAC,GAAG,OAAA,EAAS,SAAQ,CAAC,CAAA,CAAE,IAAA;AAAA,MAAK,CAAA,EAAA,GACvC,cAAA,CAAO,oBAAA;AAAA,QACL,OAAA,CAAQ,OAAA,EAAS,EAAA,EAAI,QAAA,EAAU,QAAA,CAAS,OAAA,CAAQ,GAAA,CAAI,CAAA,MAAA,EAAA,GAAU,MAAA,CAAO,IAAI;AAAA,MAC3E;AAAA,IACF;AAAA,EACF,CAAA;AAEA,EAAA,OAAOA,wBAAAA,QAAY,CAAA;AACrB;AHuBA;AACE;AACA;AACA;AACF,oHAAC","file":"/Users/tjw/Developer/pixi-react-hooks/dist/suspense/index.cjs","sourcesContent":[null,"import {use} from 'react';\nimport {useAssetCache} from '../hooks/useAssetCache';\nimport {isLoaded, load, resolve} from '../utils';\n\nimport type {UnresolvedAsset} from 'pixi.js';\nimport type {AssetUrl} from '../types';\n\nexport function useAssets<T>(urls: string | UnresolvedAsset): T;\nexport function useAssets<T>(urls: string[] | UnresolvedAsset[]): Record<string, T>;\n\nexport function useAssets<T>(urls: AssetUrl) {\n  const cache = useAssetCache<T, AssetUrl>({urls, isLoaded, load, resolve});\n  return use(cache.promise);\n}\n","import {use} from 'react';\nimport {useAssetCache} from '../hooks/useAssetCache';\nimport {isBundleLoaded, loadBundle, resolveBundle} from '../utils';\n\nimport type {AssetState} from '../types';\n\nexport function useAssetBundle<T extends Record<string, unknown>>(\n  bundles: string | string[],\n): AssetState<T> {\n  const cache = useAssetCache<AssetState<T>, string | string[]>({\n    urls: bundles,\n    isLoaded: isBundleLoaded,\n    load: loadBundle,\n    resolve: resolveBundle,\n  });\n  return use(cache.promise);\n}\n","import {use, useState} from 'react';\nimport {Assets} from 'pixi.js';\n\nimport type {AssetsManifest} from 'pixi.js';\nimport {useWarnOnRemount} from '../hooks/useWarnOnRemount';\n\nexport function useAssetManifest(\n  manifest: AssetsManifest,\n  bundles: string[] = [],\n  options: Omit<Parameters<typeof Assets.init>[0], 'manifest'> = {},\n) {\n  useWarnOnRemount(useAssetManifest);\n  const [thenable] = useState<Promise<void>>(() =>\n    Assets.init({...options, manifest}).then(() =>\n      Assets.backgroundLoadBundle(\n        bundles.length > 0 ? bundles : manifest.bundles.map(bundle => bundle.name),\n      ),\n    ),\n  );\n\n  return use(thenable);\n}\n"]}