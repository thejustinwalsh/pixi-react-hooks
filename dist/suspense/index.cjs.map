{"version":3,"sources":["/Users/tjw/Developer/pixi-react-hooks/dist/suspense/index.cjs","../../src/suspense/useAssets.ts","../../src/suspense/useAssetBundle.ts","../../src/suspense/useAssetManifest.ts"],"names":["use"],"mappings":"AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF,yDAA8B;AAC9B;AACA;ACVA,8BAAkB;AAUX,SAAS,SAAA,CAAa,IAAA,EAAgB;AAC3C,EAAA,MAAM,CAAC,KAAA,EAAO,CAAA,EAAG,QAAQ,EAAA,EAAI,6CAAA,IAA2B,EAAM,0BAAA,EAAU,sBAAA,EAAM,yBAAO,CAAA;AACrF,EAAA,OAAO,KAAA,CAAM,SAAA,EAAW,KAAA,CAAM,KAAA,EAAO,wBAAA,QAAa,CAAA;AACpD;ADGA;AACA;AEjBA;AAMO,SAAS,cAAA,CAAe,OAAA,EAA4B;AACzD,EAAA,MAAM,CAAC,KAAA,EAAO,CAAA,EAAG,QAAQ,EAAA,EAAI,6CAAA;AAAA,IAC3B,OAAA;AAAA,IACA,gCAAA;AAAA,IACA,4BAAA;AAAA,IACA;AAAA,EACF,CAAA;AAEA,EAAA,OAAO,KAAA,CAAM,SAAA,EAAW,KAAA,CAAM,KAAA,EAAOA,wBAAAA,QAAa,CAAA;AACpD;AFaA;AACA;AG7BA;AACA,iCAAqB;AAId,SAAS,gBAAA,CACd,QAAA,EACA,QAAA,EAAoB,CAAC,CAAA,EACrB,QAAA,EAA+D,CAAC,CAAA,EAChE;AACA,EAAA,MAAM,CAAC,QAAQ,EAAA,EAAI,6BAAA;AAAA,IAAwB,CAAA,EAAA,GACzC,cAAA,CAAO,IAAA,CAAK,EAAC,GAAG,OAAA,EAAS,SAAQ,CAAC,CAAA,CAAE,IAAA;AAAA,MAAK,CAAA,EAAA,GACvC,cAAA,CAAO,oBAAA;AAAA,QACL,OAAA,CAAQ,OAAA,EAAS,EAAA,EAAI,QAAA,EAAU,QAAA,CAAS,OAAA,CAAQ,GAAA,CAAI,CAAA,MAAA,EAAA,GAAU,MAAA,CAAO,IAAI;AAAA,MAC3E;AAAA,IACF;AAAA,EACF,CAAA;AAEA,EAAA,OAAOA,wBAAAA,QAAY,CAAA;AACrB;AHuBA;AACE;AACA;AACA;AACF,oHAAC","file":"/Users/tjw/Developer/pixi-react-hooks/dist/suspense/index.cjs","sourcesContent":[null,"import {use} from 'react';\nimport {useAssetState} from '../hooks/useAssetState';\nimport {isLoaded, load, resolve} from '../utils';\n\nimport type {UnresolvedAsset} from 'pixi.js';\nimport type {AssetUrl} from '../types';\n\nexport function useAssets<T>(urls: string | UnresolvedAsset): T;\nexport function useAssets<T>(urls: string[] | UnresolvedAsset[]): Record<string, T>;\n\nexport function useAssets<T>(urls: AssetUrl) {\n  const [state, _, thenable] = useAssetState<T, AssetUrl>(urls, isLoaded, load, resolve);\n  return state.isLoaded ? state.data : use(thenable!);\n}\n","import {use} from 'react';\nimport {useAssetState} from '../hooks/useAssetState';\nimport {isBundleLoaded, loadBundle, resolveBundle} from '../utils';\n\nimport type {AssetBundle} from '../types';\n\nexport function useAssetBundle(bundles: string | string[]) {\n  const [state, _, thenable] = useAssetState<AssetBundle, string | string[]>(\n    bundles,\n    isBundleLoaded,\n    loadBundle,\n    resolveBundle,\n  );\n\n  return state.isLoaded ? state.data : use(thenable!);\n}\n","import {use, useState} from 'react';\nimport {Assets} from 'pixi.js';\n\nimport type {AssetsManifest} from 'pixi.js';\n\nexport function useAssetManifest(\n  manifest: AssetsManifest,\n  bundles: string[] = [],\n  options: Omit<Parameters<typeof Assets.init>[0], 'manifest'> = {},\n) {\n  const [thenable] = useState<Promise<void>>(() =>\n    Assets.init({...options, manifest}).then(() =>\n      Assets.backgroundLoadBundle(\n        bundles.length > 0 ? bundles : manifest.bundles.map(bundle => bundle.name),\n      ),\n    ),\n  );\n\n  return use(thenable);\n}\n"]}