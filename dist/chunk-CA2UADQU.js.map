{"version":3,"sources":["../src/utils/index.ts","../src/hooks/useAssetCache.ts","../src/hooks/useWarnOnRemount.ts"],"sourcesContent":["import {Assets} from 'pixi.js';\n\nimport type {UnresolvedAsset} from 'pixi.js';\n\nexport const key = (url: string | UnresolvedAsset) =>\n  typeof url === 'string' ? url : (url.alias ?? url.src ?? '')?.toString();\n\nexport const createKey = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  new Set(Array.isArray(urls) ? urls.map(key) : [key(urls)]);\n\nexport const hashKey = (key: Set<string>) => {\n  return Array.from(key).sort().join('|');\n};\n\nexport const didKeyChange = (\n  urls: string | UnresolvedAsset | string[] | UnresolvedAsset[],\n  keys: Set<string>,\n) => (Array.isArray(urls) ? !urls.every(url => keys.has(key(url))) : !keys.has(key(urls)));\n\nexport const isLoaded = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls) ? urls.every(url => Assets.cache.has(key(url))) : Assets.cache.has(key(urls));\n\nexport const isBundleLoaded = (bundles: string | string[]) =>\n  Array.isArray(bundles)\n    ? bundles.every(bundle => Assets.resolver.hasBundle(bundle))\n    : Assets.resolver.hasBundle(bundles);\n\nexport const load = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Assets.load(urls);\n\nexport const loadBundle = <T = unknown>(bundles: string | string[]): Promise<T> =>\n  Assets.loadBundle(bundles);\n\nexport const resolve = <T = unknown>(\n  urls: string | UnresolvedAsset | string[] | UnresolvedAsset[],\n) =>\n  Array.isArray(urls)\n    ? urls.reduce((acc, url) => {\n        const k = key(url);\n        if (Assets.cache.has(k)) acc[k] = Assets.cache.get(k);\n        return acc;\n      }, {} as Record<string, T>)\n    : Assets.cache.get(key(urls));\n\nexport const resolveBundle = <T = unknown>(bundles: string | string[]) => {\n  const bundleArray = Array.isArray(bundles) ? bundles : [bundles];\n  return bundleArray.reduce((acc, bundle) => {\n    const assetMap = Assets.resolver.resolveBundle(bundle);\n    const assets = Object.keys(assetMap).reduce((acc, asset) => {\n      const k = key(asset);\n      if (Assets.cache.has(k)) acc[k] = Assets.cache.get(k);\n      return acc;\n    }, {} as Record<string, T>);\n    return {...acc, ...assets};\n  }, {} as any); // eslint-disable-line @typescript-eslint/no-explicit-any\n};\n\nexport const remove = (urls?: string | UnresolvedAsset | string[] | UnresolvedAsset[]) => {\n  if (urls) {\n    Array.isArray(urls)\n      ? urls.forEach(url => Assets.cache.remove(key(url)))\n      : Assets.cache.remove(key(urls));\n  } else {\n    Assets.cache.reset();\n  }\n};\n\nexport function cached<T>(cache: Map<string, Promise<T>>, key: Set<string>) {\n  const k = hashKey(key);\n  return cache.get(k);\n}\n","import {useEffect, useMemo} from 'react';\nimport {useStore, createStore} from 'react-concurrent-store';\nimport {createKey, hashKey, remove} from '../utils';\nimport {AssetUrl} from '../types';\n\ntype AssetCacheValue<T extends unknown = unknown> = {\n  key: Set<string>;\n  data: T | null;\n  promise: Promise<T>;\n  hash?: string;\n};\n\ntype AssetCache<T extends unknown = unknown> = Map<string, Readonly<AssetCacheValue<T>>>;\n\ntype AssetCacheProps<T extends unknown = unknown, P extends AssetUrl = AssetUrl> = {\n  urls: P;\n  isLoaded: (urls: P) => boolean;\n  load: (urls: P) => Promise<T>;\n  resolve: (urls: P) => T;\n};\n\ntype AssetCacheAction<T extends unknown = unknown, P extends AssetUrl = AssetUrl> =\n  | {type: 'update'; payload: Required<AssetCacheValue<T>>}\n  | {type: 'remove'; payload: {urls: P}}\n  | {type: 'set'; payload: Required<AssetCacheValue<T>>}\n  | {type: 'reset'; payload?: boolean};\n\nfunction loadFromCache<T extends unknown, P extends AssetUrl>(\n  cache: AssetCache<T>,\n  {urls, isLoaded, load, resolve}: AssetCacheProps<T, P>,\n): {cached: Required<AssetCacheValue<T>>; hash: string} {\n  const key = createKey(urls);\n  const hash = hashKey(key);\n  const cached = cache.get(hash);\n  if (cached) {\n    return {hash, cached: cached as Required<AssetCacheValue<T>>} as const;\n  }\n\n  const loaded = isLoaded(urls);\n  const data = loaded ? resolve(urls) : null;\n  const promise = loaded\n    ? (Promise.resolve(data) as Promise<T>)\n    : load(urls).finally(() =>\n        store.update({\n          type: 'set',\n          payload: {\n            key,\n            data,\n            promise,\n            hash,\n          },\n        }),\n      );\n  return {hash, cached: {key, data, promise, hash}} as const;\n}\n\nconst storeReducer = <T extends unknown = unknown, P extends AssetUrl = AssetUrl>(\n  current: AssetCache<T>,\n  action: AssetCacheAction<T, P>,\n) => {\n  switch (action.type) {\n    case 'update': {\n      return new Map(current).set(action.payload.hash, action.payload);\n    }\n    case 'remove': {\n      remove(action.payload.urls);\n      const key = createKey(action.payload.urls);\n      const hash = hashKey(key);\n      current.delete(hash);\n      return new Map(current);\n    }\n    // set: Direct cache mutation, skip re-render\n    case 'set': {\n      return current.set(action.payload.hash, action.payload);\n    }\n    // reset: Direct cache clear, then trigger a re-render\n    case 'reset': {\n      if (action.payload) {\n        remove();\n      }\n      current.clear();\n      return new Map(current);\n    }\n  }\n};\n\nconst store = createStore<AssetCache, AssetCacheAction>(new Map(), storeReducer);\n\nexport function unsafeClearCache() {\n  // @ts-expect-error\n  store._current = store._sync = store._transition = new Map();\n}\n\nexport function clear() {\n  store.update({type: 'reset', payload: true});\n}\n\nexport function refresh() {\n  store.update({type: 'reset'});\n}\n\nexport function reset(keys?: string[]) {\n  if (keys) {\n    store.update({\n      type: 'remove',\n      payload: {urls: keys},\n    });\n  } else {\n    store.update({\n      type: 'reset',\n    });\n  }\n}\n\nexport function useAssetCacheActions() {\n  return {clear, reset, refresh};\n}\n\nexport function useAssetCache<T extends unknown, P extends AssetUrl>({\n  urls,\n  isLoaded,\n  load,\n  resolve,\n}: AssetCacheProps<T, P>) {\n  const cache = useStore<AssetCache<T>>(store);\n  const current = useMemo(() => {\n    return loadFromCache<T, P>(cache, {urls, isLoaded, load, resolve});\n  }, [cache, urls, isLoaded, load, resolve]);\n  const cached = useMemo(() => cache.get(current.hash) ?? null, [cache, current.hash]);\n\n  useEffect(() => {\n    if (!cached) {\n      store.update({\n        type: 'update',\n        payload: current.cached,\n      });\n    }\n  }, [cached, current.cached]);\n\n  return cached ?? current.cached;\n}\n","import {useEffect} from 'react';\n\ntype InitOnceHook = Function & {hasMountedTag?: string};\n\nconst noop = (_hook: InitOnceHook) => {};\n\nexport const useWarnOnRemount =\n  // @ts-ignore -- dev only\n  process.env.NODE_ENV === 'production'\n    ? noop\n    : (hook: InitOnceHook) => {\n        useEffect(() => {\n          if (hook.hasMountedTag === console.log.name) {\n            console.warn(`${hook.name} should only be mounted once during the lifetime of the app`);\n          } else if (hook.hasMountedTag === undefined) {\n            hook.hasMountedTag = console.log.name;\n          }\n        }, []); // eslint-disable-line react-hooks/exhaustive-deps\n      };\n"],"mappings":"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","names":["key","acc","isLoaded","load","resolve","key","isLoaded","load","resolve","useEffect"]}