{"version":3,"sources":["/Users/tjw/Developer/pixi-react-hooks/dist/index.cjs","../src/useAssets.ts","../src/useAssetBundle.ts","../src/useAssetManifest.ts"],"names":["useEffect","isLoaded"],"mappings":"AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF,wDAA6B;AAC7B;AACA;ACVA,8BAAwB;AAUjB,SAAS,SAAA,CAAa,IAAA,EAA+D;AAC1F,EAAA,MAAM,CAAC,KAAA,EAAO,QAAA,EAAU,QAAQ,EAAA,EAAI,6CAAA,IAAiB,EAAM,0BAAA,EAAU,sBAAA,EAAM,yBAAO,CAAA;AAElF,EAAA,8BAAA,CAAU,EAAA,GAAM;AACd,IAAA,SAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,QAAA,CACI,IAAA,CAAK,CAAA,IAAA,EAAA,GAAQ,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAI,CAAC,CAAA,CAAA,CAC1D,KAAA,CAAM,CAAA,KAAA,EAAA,GAAS,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAA,EAAS,CAAC,CAAA,CAAA;AAAA,EACrE,CAAA,EAAG,CAAC,QAAA,EAAU,QAAQ,CAAC,CAAA;AAEvB,EAAA,OAAO,KAAA;AACT;ADDA;AACA;AEpBA;AAYO,SAAS,cAAA,CAAe,OAAA,EAA4B;AACzD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAA,EAAU,QAAQ,EAAA,EAAI,6CAAA,OAElC,EAAS,gCAAA,EAAgB,4BAAA,EAAY,+BAAa,CAAA;AAEpD,EAAAA,8BAAAA,CAAU,EAAA,GAAM;AACd,IAAA,SAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,QAAA,CACI,IAAA,CAAK,CAAA,IAAA,EAAA,GAAQ,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAI,CAAC,CAAA,CAAA,CAC1D,KAAA,CAAM,CAAA,KAAA,EAAA,GAAS,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAA,EAAS,CAAC,CAAA,CAAA;AAAA,EACrE,CAAA,EAAG,CAAC,QAAA,EAAU,QAAQ,CAAC,CAAA;AAEvB,EAAA,OAAO,KAAA;AACT;AFKA;AACA;AG9BA,iCAAqC;AACrC;AAOO,SAAS,gBAAA,CACd,QAAA,EACA,QAAA,EAAoB,CAAC,CAAA,EACrB,QAAA,EAA+D,CAAC,CAAA,EAChE;AACA,EAAA,MAAM,CAAC,EAAC,QAAA,EAAAC,SAAAA,EAAU,SAAQ,CAAA,EAAG,QAAQ,EAAA,EAAI,6BAAA,CAA6B,EAAA,GAAA,CAAO;AAAA,IAC3E,QAAA,EAAU,KAAA;AAAA,IACV,QAAA,EAAU,cAAA,CAAO,IAAA,CAAK;AAAA,MACpB,GAAG,OAAA;AAAA,MACH;AAAA,IACF,CAAC,CAAA,CAAE,IAAA,CAAK,CAAA,EAAA,GAAM;AACZ,MAAA,cAAA,CAAO,oBAAA;AAAA,QACL,OAAA,CAAQ,OAAA,EAAS,EAAA,EAAI,QAAA,EAAU,QAAA,CAAS,OAAA,CAAQ,GAAA,CAAI,CAAA,MAAA,EAAA,GAAU,MAAA,CAAO,IAAI;AAAA,MAC3E,CAAA;AAAA,IACF,CAAC;AAAA,EACH,CAAA,CAAE,CAAA;AAEF,EAAAD,8BAAAA,CAAU,EAAA,GAAM;AACd,IAAA,QAAA,CAAS,IAAA,CAAK,CAAA,EAAA,GAAM,QAAA,CAAS,CAAA,CAAA,EAAA,GAAA,CAAM,EAAC,GAAG,CAAA,EAAG,QAAA,EAAU,KAAI,CAAA,CAAE,CAAC,CAAA;AAAA,EAC7D,CAAA,EAAG,CAAC,QAAQ,CAAC,CAAA;AAEb,EAAA,OAAO,EAAC,QAAA,EAAAC,UAAQ,CAAA;AAClB;AHoBA;AACE;AACA;AACA;AACF,oHAAC","file":"/Users/tjw/Developer/pixi-react-hooks/dist/index.cjs","sourcesContent":[null,"import {useEffect} from 'react';\nimport {useAssetState} from './hooks/useAssetState';\nimport {isLoaded, load, resolve} from './utils';\n\nimport type {UnresolvedAsset} from 'pixi.js';\nimport type {AssetState} from './types';\n\nexport function useAssets<T>(urls: string | UnresolvedAsset): AssetState<T | undefined>;\nexport function useAssets<T>(urls: string[] | UnresolvedAsset[]): AssetState<Record<string, T>>;\n\nexport function useAssets<T>(urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) {\n  const [state, setState, thenable] = useAssetState<T>(urls, isLoaded, load, resolve);\n\n  useEffect(() => {\n    thenable\n      ?.then(data => setState({isLoaded: true, error: null, data}))\n      .catch(error => setState({isLoaded: true, error, data: undefined}));\n  }, [setState, thenable]);\n\n  return state;\n}\n","import {useEffect} from 'react';\nimport {useAssetState} from './hooks/useAssetState';\nimport {isBundleLoaded, loadBundle, resolveBundle} from './utils';\n\nimport type {ResolvedAsset} from 'pixi.js';\nimport type {AssetState} from './types';\n\nexport function useAssetBundle(bundles: string): AssetState<Record<string, ResolvedAsset>>;\nexport function useAssetBundle(\n  bundles: string[],\n): AssetState<Record<string, Record<string, ResolvedAsset>>>;\n\nexport function useAssetBundle(bundles: string | string[]) {\n  const [state, setState, thenable] = useAssetState<\n    Record<string, ResolvedAsset> | Record<string, Record<string, ResolvedAsset>>\n  >(bundles, isBundleLoaded, loadBundle, resolveBundle);\n\n  useEffect(() => {\n    thenable\n      ?.then(data => setState({isLoaded: true, error: null, data}))\n      .catch(error => setState({isLoaded: true, error, data: undefined}));\n  }, [setState, thenable]);\n\n  return state;\n}\n","import {Assets, AssetsManifest} from 'pixi.js';\nimport {useEffect, useState} from 'react';\n\ntype AssetManifestState = {\n  isLoaded: boolean;\n  thenable: Promise<void>;\n};\n\nexport function useAssetManifest(\n  manifest: AssetsManifest,\n  bundles: string[] = [],\n  options: Omit<Parameters<typeof Assets.init>[0], 'manifest'> = {},\n) {\n  const [{isLoaded, thenable}, setState] = useState<AssetManifestState>(() => ({\n    isLoaded: false,\n    thenable: Assets.init({\n      ...options,\n      manifest,\n    }).then(() => {\n      Assets.backgroundLoadBundle(\n        bundles.length > 0 ? bundles : manifest.bundles.map(bundle => bundle.name),\n      );\n    }),\n  }));\n\n  useEffect(() => {\n    thenable.then(() => setState(s => ({...s, isLoaded: true})));\n  }, [thenable]);\n\n  return {isLoaded};\n}\n"]}