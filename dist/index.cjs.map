{"version":3,"sources":["/Users/tjw/Developer/pixi-react-hooks/dist/index.cjs","../src/assets/useAssets.ts","../src/assets/useAssetBundle.ts","../src/assets/useAssetManifest.ts"],"names":["Assets","useEffect","isLoaded","useState"],"mappings":"AAAA;AACE;AACA;AACA;AACA;AACA;AACF,wDAA6B;AAC7B;AACA;ACRA,8BAAkC;AAClC,iCAAqB;AAUd,SAAS,SAAA,CAAa,IAAA,EAA+D;AAC1F,EAAA,MAAM,EAAC,KAAA,EAAO,QAAA,EAAU,SAAQ,EAAA,EAAI,6CAAA,IAAiB,EAAM,0BAAA,EAAU,cAAA,CAAO,IAAA,EAAM,yBAAO,CAAA;AAEzF,EAAA,8BAAA,CAAU,EAAA,GAAM;AACd,IAAA,SAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,QAAA,CACI,IAAA,CAAK,CAAA,IAAA,EAAA,GAAQ,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAI,CAAC,CAAA,CAAA,CAC1D,KAAA,CAAM,CAAA,KAAA,EAAA,GAAS,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAA,EAAS,CAAC,CAAA,CAAA;AAAA,EACrE,CAAA,EAAG,CAAC,QAAQ,CAAC,CAAA;AAEb,EAAA,OAAO,KAAA;AACT;ADHA;AACA;AEnBA;AACA;AAYO,SAAS,cAAA,CAAe,OAAA,EAA4B;AACzD,EAAA,MAAM,EAAC,KAAA,EAAO,QAAA,EAAU,SAAQ,EAAA,EAAI,6CAAA,OAElC,EAAS,gCAAA,EAAgBA,cAAAA,CAAO,UAAA,EAAY,+BAAa,CAAA;AAE3D,EAAAC,8BAAAA,CAAU,EAAA,GAAM;AACd,IAAA,SAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,QAAA,CACI,IAAA,CAAK,CAAA,IAAA,EAAA,GAAQ,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAI,CAAC,CAAA,CAAA,CAC1D,KAAA,CAAM,CAAA,KAAA,EAAA,GAAS,QAAA,CAAS,EAAC,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,KAAA,EAAS,CAAC,CAAA,CAAA;AAAA,EACrE,CAAA,EAAG,CAAC,QAAQ,CAAC,CAAA;AAEb,EAAA,OAAO,KAAA;AACT;AFIA;AACA;AG5BA;AACA;AAEA,IAAI,kBAAA,EAA2C,IAAA;AAExC,SAAS,gBAAA,CACd,QAAA,EACA,QAAA,EAAoB,CAAC,CAAA,EACrB,QAAA,EAA+D,CAAC,CAAA,EAChE;AACA,EAAA,MAAM,CAACC,SAAAA,EAAU,WAAW,EAAA,EAAIC,6BAAAA,KAAc,CAAA;AAE9C,EAAAF,8BAAAA,CAAU,EAAA,GAAM;AACd,IAAA,CAAC,MAAA,CAAA,EAAA,GAAY;AACX,MAAA,MAAMD,cAAAA,CAAO,IAAA,CAAK;AAAA,QAChB,GAAG,OAAA;AAAA,QACH;AAAA,MACF,CAAC,CAAA;AAED,MAAAA,cAAAA,CAAO,oBAAA;AAAA,QACL,OAAA,CAAQ,OAAA,EAAS,EAAA,EAAI,QAAA,EAAU,QAAA,CAAS,OAAA,CAAQ,GAAA,CAAI,CAAA,MAAA,EAAA,GAAU,MAAA,CAAO,IAAI;AAAA,MAC3E,CAAA;AACA,MAAA,WAAA,CAAY,IAAI,CAAA;AAAA,IAClB,CAAA,CAAA,CAAG,CAAA;AAAA,EAEL,CAAA,EAAG,CAAC,CAAC,CAAA;AAEL,EAAA,GAAA,CAAI,kBAAA,IAAsB,KAAA,GAAQ,kBAAA,IAAsB,QAAA,EAAU;AAChE,IAAA,OAAA,CAAQ,IAAA,CAAK,uDAAuD,CAAA;AAAA,EACtE;AACA,EAAA,kBAAA,EAAoB,QAAA;AAEpB,EAAA,OAAO,EAAC,QAAA,EAAAE,UAAQ,CAAA;AAClB;AHmBA;AACE;AACA;AACA;AACF,oHAAC","file":"/Users/tjw/Developer/pixi-react-hooks/dist/index.cjs","sourcesContent":[null,"import {useEffect, useState} from 'react';\nimport {Assets} from 'pixi.js';\nimport {createKey, didKeyChange, isLoaded, resolve} from './utils';\n\nimport type {UnresolvedAsset} from 'pixi.js';\nimport type {AssetState, HookState} from './types';\nimport {useAssetState} from './hooks/useAssetState';\n\nexport function useAssets<T>(urls: string | UnresolvedAsset): AssetState<T | undefined>;\nexport function useAssets<T>(urls: string[] | UnresolvedAsset[]): AssetState<Record<string, T>>;\n\nexport function useAssets<T>(urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) {\n  const {state, setState, thenable} = useAssetState<T>(urls, isLoaded, Assets.load, resolve);\n\n  useEffect(() => {\n    thenable\n      ?.then(data => setState({isLoaded: true, error: null, data}))\n      .catch(error => setState({isLoaded: true, error, data: undefined}));\n  }, [thenable]);\n\n  return state;\n}\n","import {useEffect} from 'react';\nimport {Assets} from 'pixi.js';\nimport {useAssetState} from './hooks/useAssetState';\nimport {isBundleLoaded, resolveBundle} from './utils';\n\nimport type {ResolvedAsset} from 'pixi.js';\nimport type {AssetState} from './types';\n\nexport function useAssetBundle(bundles: string): AssetState<Record<string, ResolvedAsset>>;\nexport function useAssetBundle(\n  bundles: string[],\n): AssetState<Record<string, Record<string, ResolvedAsset>>>;\n\nexport function useAssetBundle(bundles: string | string[]) {\n  const {state, setState, thenable} = useAssetState<\n    Record<string, ResolvedAsset> | Record<string, Record<string, ResolvedAsset>>\n  >(bundles, isBundleLoaded, Assets.loadBundle, resolveBundle);\n\n  useEffect(() => {\n    thenable\n      ?.then(data => setState({isLoaded: true, error: null, data}))\n      .catch(error => setState({isLoaded: true, error, data: undefined}));\n  }, [thenable]);\n\n  return state;\n}\n","/* eslint-disable react-compiler/react-compiler */\n\nimport {Assets, AssetsManifest} from 'pixi.js';\nimport {useEffect, useState} from 'react';\n\nlet manifestSingleton: AssetsManifest | null = null;\n\nexport function useAssetManifest(\n  manifest: AssetsManifest,\n  bundles: string[] = [],\n  options: Omit<Parameters<typeof Assets.init>[0], 'manifest'> = {},\n) {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      await Assets.init({\n        ...options,\n        manifest,\n      });\n\n      Assets.backgroundLoadBundle(\n        bundles.length > 0 ? bundles : manifest.bundles.map(bundle => bundle.name),\n      );\n      setIsLoaded(true);\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only run once\n  }, []);\n\n  if (manifestSingleton !== null && manifestSingleton !== manifest) {\n    console.warn('useAssetManifest should only be used once in your app');\n  }\n  manifestSingleton = manifest;\n\n  return {isLoaded};\n}\n"]}