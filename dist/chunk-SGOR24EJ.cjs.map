{"version":3,"sources":["/Users/tjw/Developer/pixi-react-hooks/dist/chunk-SGOR24EJ.cjs","../src/assets/utils/index.ts","../src/assets/hooks/useAssetState.ts"],"names":["isLoaded","resolve","state"],"mappings":"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","file":"/Users/tjw/Developer/pixi-react-hooks/dist/chunk-SGOR24EJ.cjs","sourcesContent":[null,"import {Assets} from 'pixi.js';\n\nimport type {UnresolvedAsset} from 'pixi.js';\n\nexport const key = (url: string | UnresolvedAsset) =>\n  typeof url === 'string' ? url : (url.alias ?? url.src ?? '')?.toString();\n\nexport const createKey = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  new Set(Array.isArray(urls) ? urls.map(key) : key(urls));\n\nexport const didKeyChange = (\n  urls: string | UnresolvedAsset | string[] | UnresolvedAsset[],\n  keys: Set<string>,\n) => (Array.isArray(urls) ? !urls.every(url => keys.has(key(url))) : !keys.has(key(urls)));\n\nexport const isLoaded = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls) ? urls.every(url => Assets.cache.has(key(url))) : Assets.cache.has(key(urls));\n\nexport const isBundleLoaded = (bundles: string | string[]) =>\n  Array.isArray(bundles)\n    ? bundles.every(bundle => Assets.resolver.hasBundle(bundle))\n    : Assets.resolver.hasBundle(bundles);\n\nexport const resolve = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls)\n    ? urls.reduce((acc, url) => {\n        const k = key(url);\n        if (Assets.cache.has(k)) acc[k] = Assets.cache.get(k);\n        return acc;\n      }, {} as Record<string, any>)\n    : Assets.cache.get(key(urls));\n\nexport const resolveBundle = (bundles: string | string[]) =>\n  Assets.resolver.resolveBundle(bundles) as any;\n","import {useEffect, useState} from 'react';\nimport {didKeyChange, createKey} from '../utils';\n\nimport type {UnresolvedAsset} from 'pixi.js';\nimport type {AssetState, HookState} from '../types';\n\ntype AssetStateReturn<T> = {\n  state: AssetState<T>;\n  setState: (state: AssetState<T>) => void;\n  thenable: Promise<T>;\n};\n\nexport function useAssetState<T>(\n  urls: string | UnresolvedAsset | string[] | UnresolvedAsset[],\n  isLoaded: (urls: any) => boolean,\n  load: <T>(urls: any) => Promise<T>,\n  resolve: <T>(urls: any) => T,\n): AssetStateReturn<T | Record<string, T>> {\n  const [assetState, setAssetState] = useState<AssetState<T | Record<string, T>>>(() => ({\n    isLoaded: isLoaded(urls),\n    error: null,\n    data: resolve(urls),\n  }));\n\n  const [state, setState] = useState<HookState<T>>(() => ({\n    thenable: !assetState.isLoaded ? load(urls) : undefined,\n    key: createKey(urls),\n  }));\n\n  useEffect(() => {\n    if (didKeyChange(urls, state.key)) {\n      const assetsLoaded = isLoaded(urls);\n      setState(state => ({\n        thenable: assetsLoaded ? state.thenable : load(urls),\n        key: createKey(urls),\n      }));\n      setAssetState({isLoaded: assetsLoaded, error: null, data: resolve(urls)});\n    }\n  }, [urls, state.key]);\n\n  return {state: assetState, setState: setAssetState, thenable: state.thenable};\n}\n"]}