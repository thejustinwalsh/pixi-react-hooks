{"version":3,"sources":["../src/useAssets.ts"],"sourcesContent":["import {use, useEffect, useState} from 'react';\nimport {Assets} from 'pixi.js';\n\nimport type {UnresolvedAsset} from 'pixi.js';\n\nexport type AssetState<T> = {\n  isLoaded: boolean;\n  error: Error | null;\n  data: T;\n};\n\ntype HookState<T> = {\n  thenable?: Promise<T>;\n  key: Set<string>;\n};\n\nexport function useAssets<T>(urls: string | UnresolvedAsset): AssetState<T | undefined>;\nexport function useAssets<T>(urls: string[] | UnresolvedAsset[]): AssetState<Record<string, T>>;\n\nexport function useAssets<T>(urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) {\n  const [assetState, setAssetState] = useState<AssetState<T | Record<string, T> | undefined>>(() => ({\n    isLoaded: isLoaded(urls),\n    error: null,\n    data: resolve<T>(urls),\n  }));\n\n  const [state, setState] = useState<HookState<T>>(() => ({\n    thenable: !assetState.isLoaded ? Assets.load(urls) : undefined,\n    key: createKey(urls),\n  }));\n\n  useEffect(() => {\n    if (didKeyChange(urls, state.key)) {\n      const assetsLoaded = isLoaded(urls);\n      setState(state => ({thenable: assetsLoaded ? state.thenable : Assets.load(urls), key: createKey(urls)}));\n      setAssetState({isLoaded: assetsLoaded, error: null, data: resolve<T>(urls)});\n    }\n  }, [urls, state.key]);\n\n  useEffect(() => {\n    state.thenable\n      ?.then(data => setAssetState({isLoaded: true, error: null, data}))\n      .catch(error => setAssetState({isLoaded: true, error, data: undefined}));\n  }, [state.thenable]);\n\n  return assetState;\n}\n\nexport function useSuspenseAssets<T>(urls: string | UnresolvedAsset): T;\nexport function useSuspenseAssets<T>(urls: string[] | UnresolvedAsset[]): Record<string, T>;\n\nexport function useSuspenseAssets<T>(urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) {\n  const [state, setState] = useState<Required<HookState<T>>>(() => ({\n    thenable: Assets.load(urls),\n    key: createKey(urls),\n  }));\n\n  useEffect(() => {\n    if (didKeyChange(urls, state.key)) {\n      setState({thenable: Assets.load(urls), key: createKey(urls)});\n    }\n  }, [urls, state]);\n\n  return use(state.thenable);\n}\n\nconst key = (url: string | UnresolvedAsset) =>\n  typeof url === 'string' ? url : (url.alias ?? url.src ?? '')?.toString();\n\nconst createKey = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  new Set(Array.isArray(urls) ? urls.map(key) : key(urls));\n\nconst didKeyChange = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[], keys: Set<string>) =>\n  Array.isArray(urls) ? !urls.every(url => keys.has(key(url))) : !keys.has(key(urls));\n\nconst isLoaded = (urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls) ? urls.every(url => Assets.cache.has(key(url))) : Assets.cache.has(key(urls));\n\nconst resolve = <T>(urls: string | UnresolvedAsset | string[] | UnresolvedAsset[]) =>\n  Array.isArray(urls)\n    ? urls.reduce(\n        (acc, url) => {\n          const k = key(url);\n          if (Assets.cache.has(k)) acc[k] = Assets.cache.get<T>(k);\n          return acc;\n        },\n        {} as Record<string, T>,\n      )\n    : Assets.cache.get<T>(key(urls));\n"],"mappings":";AAAA,SAAQ,KAAK,WAAW,gBAAe;AACvC,SAAQ,cAAa;AAkBd,SAAS,UAAa,MAA+D;AAC1F,QAAM,CAAC,YAAY,aAAa,IAAI,SAAwD,OAAO;AAAA,IACjG,UAAU,SAAS,IAAI;AAAA,IACvB,OAAO;AAAA,IACP,MAAM,QAAW,IAAI;AAAA,EACvB,EAAE;AAEF,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAuB,OAAO;AAAA,IACtD,UAAU,CAAC,WAAW,WAAW,OAAO,KAAK,IAAI,IAAI;AAAA,IACrD,KAAK,UAAU,IAAI;AAAA,EACrB,EAAE;AAEF,YAAU,MAAM;AACd,QAAI,aAAa,MAAM,MAAM,GAAG,GAAG;AACjC,YAAM,eAAe,SAAS,IAAI;AAClC,eAAS,CAAAA,YAAU,EAAC,UAAU,eAAeA,OAAM,WAAW,OAAO,KAAK,IAAI,GAAG,KAAK,UAAU,IAAI,EAAC,EAAE;AACvG,oBAAc,EAAC,UAAU,cAAc,OAAO,MAAM,MAAM,QAAW,IAAI,EAAC,CAAC;AAAA,IAC7E;AAAA,EACF,GAAG,CAAC,MAAM,MAAM,GAAG,CAAC;AAEpB,YAAU,MAAM;AAvClB;AAwCI,gBAAM,aAAN,mBACI,KAAK,UAAQ,cAAc,EAAC,UAAU,MAAM,OAAO,MAAM,KAAI,CAAC,GAC/D,MAAM,WAAS,cAAc,EAAC,UAAU,MAAM,OAAO,MAAM,OAAS,CAAC;AAAA,EAC1E,GAAG,CAAC,MAAM,QAAQ,CAAC;AAEnB,SAAO;AACT;AAKO,SAAS,kBAAqB,MAA+D;AAClG,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAiC,OAAO;AAAA,IAChE,UAAU,OAAO,KAAK,IAAI;AAAA,IAC1B,KAAK,UAAU,IAAI;AAAA,EACrB,EAAE;AAEF,YAAU,MAAM;AACd,QAAI,aAAa,MAAM,MAAM,GAAG,GAAG;AACjC,eAAS,EAAC,UAAU,OAAO,KAAK,IAAI,GAAG,KAAK,UAAU,IAAI,EAAC,CAAC;AAAA,IAC9D;AAAA,EACF,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SAAO,IAAI,MAAM,QAAQ;AAC3B;AAEA,IAAM,MAAM,CAAC,QAA+B;AAlE5C;AAmEE,gBAAO,QAAQ,WAAW,OAAO,SAAI,SAAS,IAAI,OAAO,OAAxB,mBAA6B;AAAA;AAEhE,IAAM,YAAY,CAAC,SACjB,IAAI,IAAI,MAAM,QAAQ,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;AAEzD,IAAM,eAAe,CAAC,MAA+D,SACnF,MAAM,QAAQ,IAAI,IAAI,CAAC,KAAK,MAAM,SAAO,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC;AAEpF,IAAM,WAAW,CAAC,SAChB,MAAM,QAAQ,IAAI,IAAI,KAAK,MAAM,SAAO,OAAO,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,OAAO,MAAM,IAAI,IAAI,IAAI,CAAC;AAElG,IAAM,UAAU,CAAI,SAClB,MAAM,QAAQ,IAAI,IACd,KAAK;AAAA,EACH,CAAC,KAAK,QAAQ;AACZ,UAAM,IAAI,IAAI,GAAG;AACjB,QAAI,OAAO,MAAM,IAAI,CAAC,EAAG,KAAI,CAAC,IAAI,OAAO,MAAM,IAAO,CAAC;AACvD,WAAO;AAAA,EACT;AAAA,EACA,CAAC;AACH,IACA,OAAO,MAAM,IAAO,IAAI,IAAI,CAAC;","names":["state"]}